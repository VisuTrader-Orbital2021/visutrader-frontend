{"ast":null,"code":"var _jsxFileName = \"/home/richwill/workspace/visutrader-frontend/src/assets/canvasjs.stock.react.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/*\nCanvasJS React StockCharts - https://canvasjs.com/\nCopyright 2021 fenopix\n\n--------------------- License Information --------------------\nCanvasJS is a commercial product which requires purchase of license. Without a commercial license you can use it for evaluation purposes for upto 30 days. Please refer to the following link for further details.\nhttps://canvasjs.com/license/\n\n*/\nvar React = require(\"react\");\n\nvar CanvasJS = require(\"./canvasjs.stock.min\");\n\nCanvasJS = CanvasJS.Chart ? CanvasJS : window.CanvasJS;\n\nclass CanvasJSChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.options = props.options ? props.options : {};\n    this.containerProps = props.containerProps ? props.containerProps : {\n      width: \"100%\",\n      position: \"relative\"\n    };\n    this.containerProps.height = props.containerProps && props.containerProps.height ? props.containerProps.height : this.options.height ? this.options.height + \"px\" : \"400px\";\n    this.chartContainerId = \"canvasjs-react-chart-container-\" + CanvasJSChart._cjsContainerId++;\n  }\n\n  componentDidMount() {\n    //Create Chart and Render\n    this.chart = new CanvasJS.Chart(this.chartContainerId, this.options);\n    this.chart.render();\n    if (this.props.onRef) this.props.onRef(this.chart);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    //Check if Chart-options has changed and determine if component has to be updated\n    return !(nextProps.options === this.options);\n  }\n\n  componentDidUpdate() {\n    //Update Chart Options & Render\n    this.chart.options = this.props.options;\n    this.chart.render();\n  }\n\n  componentWillUnmount() {\n    //Destroy chart and remove reference\n    this.chart.destroy();\n    if (this.props.onRef) this.props.onRef(undefined);\n  }\n\n  render() {\n    //return React.createElement('div', { id: this.chartContainerId, style: this.containerProps });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: this.chartContainerId,\n      style: this.containerProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nCanvasJSChart._cjsContainerId = 0;\n\nclass CanvasJSStockChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.options = props.options ? props.options : {};\n    this.containerProps = props.containerProps ? props.containerProps : {\n      width: \"100%\",\n      position: \"relative\"\n    };\n    this.containerProps.height = props.containerProps && props.containerProps.height ? props.containerProps.height : this.options.height ? this.options.height + \"px\" : \"600px\";\n    this.chartContainerId = \"canvasjs-react-stockchart-container-\" + CanvasJSStockChart._cjsContainerId++;\n  }\n\n  componentDidMount() {\n    //Create Chart and Render\n    this.stockChart = new CanvasJS.StockChart(this.chartContainerId, this.options);\n    this.stockChart.render();\n    if (this.props.onRef) this.props.onRef(this.stockChart);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    //Check if Chart-options has changed and determine if component has to be updated\n    return !(nextProps.options === this.options);\n  }\n\n  componentDidUpdate() {\n    //Update Chart Options & Render\n    this.stockChart.options = this.props.options;\n    this.stockChart.render();\n  }\n\n  componentWillUnmount() {\n    //Destroy chart and remove reference\n    this.stockChart.destroy();\n    if (this.props.onRef) this.props.onRef(undefined);\n  }\n\n  render() {\n    //return React.createElement('div', { id: this.chartContainerId, style: this.containerProps });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: this.chartContainerId,\n      style: this.containerProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nCanvasJSStockChart._cjsContainerId = 0;\nvar CanvasJSReact = {\n  CanvasJSChart: CanvasJSChart,\n  CanvasJSStockChart: CanvasJSStockChart,\n  CanvasJS: CanvasJS\n};\nexport default CanvasJSReact;","map":{"version":3,"sources":["/home/richwill/workspace/visutrader-frontend/src/assets/canvasjs.stock.react.js"],"names":["React","require","CanvasJS","Chart","window","CanvasJSChart","Component","constructor","props","options","containerProps","width","position","height","chartContainerId","_cjsContainerId","componentDidMount","chart","render","onRef","shouldComponentUpdate","nextProps","nextState","componentDidUpdate","componentWillUnmount","destroy","undefined","CanvasJSStockChart","stockChart","StockChart","CanvasJSReact"],"mappings":"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","sourcesContent":["/*\nCanvasJS React StockCharts - https://canvasjs.com/\nCopyright 2021 fenopix\n\n--------------------- License Information --------------------\nCanvasJS is a commercial product which requires purchase of license. Without a commercial license you can use it for evaluation purposes for upto 30 days. Please refer to the following link for further details.\nhttps://canvasjs.com/license/\n\n*/\n\nvar React = require(\"react\");\nvar CanvasJS = require(\"./canvasjs.stock.min\");\nCanvasJS = CanvasJS.Chart ? CanvasJS : window.CanvasJS;\n\nclass CanvasJSChart extends React.Component {\n  static _cjsContainerId = 0;\n  constructor(props) {\n    super(props);\n    this.options = props.options ? props.options : {};\n    this.containerProps = props.containerProps\n      ? props.containerProps\n      : { width: \"100%\", position: \"relative\" };\n    this.containerProps.height =\n      props.containerProps && props.containerProps.height\n        ? props.containerProps.height\n        : this.options.height\n        ? this.options.height + \"px\"\n        : \"400px\";\n    this.chartContainerId =\n      \"canvasjs-react-chart-container-\" + CanvasJSChart._cjsContainerId++;\n  }\n  componentDidMount() {\n    //Create Chart and Render\n    this.chart = new CanvasJS.Chart(this.chartContainerId, this.options);\n    this.chart.render();\n\n    if (this.props.onRef) this.props.onRef(this.chart);\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    //Check if Chart-options has changed and determine if component has to be updated\n    return !(nextProps.options === this.options);\n  }\n  componentDidUpdate() {\n    //Update Chart Options & Render\n    this.chart.options = this.props.options;\n    this.chart.render();\n  }\n  componentWillUnmount() {\n    //Destroy chart and remove reference\n    this.chart.destroy();\n    if (this.props.onRef) this.props.onRef(undefined);\n  }\n  render() {\n    //return React.createElement('div', { id: this.chartContainerId, style: this.containerProps });\n    return <div id={this.chartContainerId} style={this.containerProps} />;\n  }\n}\n\nclass CanvasJSStockChart extends React.Component {\n  static _cjsContainerId = 0;\n  constructor(props) {\n    super(props);\n    this.options = props.options ? props.options : {};\n    this.containerProps = props.containerProps\n      ? props.containerProps\n      : { width: \"100%\", position: \"relative\" };\n    this.containerProps.height =\n      props.containerProps && props.containerProps.height\n        ? props.containerProps.height\n        : this.options.height\n        ? this.options.height + \"px\"\n        : \"600px\";\n    this.chartContainerId =\n      \"canvasjs-react-stockchart-container-\" +\n      CanvasJSStockChart._cjsContainerId++;\n  }\n  componentDidMount() {\n    //Create Chart and Render\n    this.stockChart = new CanvasJS.StockChart(\n      this.chartContainerId,\n      this.options\n    );\n    this.stockChart.render();\n\n    if (this.props.onRef) this.props.onRef(this.stockChart);\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    //Check if Chart-options has changed and determine if component has to be updated\n    return !(nextProps.options === this.options);\n  }\n  componentDidUpdate() {\n    //Update Chart Options & Render\n    this.stockChart.options = this.props.options;\n    this.stockChart.render();\n  }\n  componentWillUnmount() {\n    //Destroy chart and remove reference\n    this.stockChart.destroy();\n    if (this.props.onRef) this.props.onRef(undefined);\n  }\n  render() {\n    //return React.createElement('div', { id: this.chartContainerId, style: this.containerProps });\n    return <div id={this.chartContainerId} style={this.containerProps} />;\n  }\n}\n\nvar CanvasJSReact = {\n  CanvasJSChart: CanvasJSChart,\n  CanvasJSStockChart: CanvasJSStockChart,\n  CanvasJS: CanvasJS,\n};\n\nexport default CanvasJSReact;\n"]},"metadata":{},"sourceType":"module"}