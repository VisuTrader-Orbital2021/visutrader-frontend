{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { sendRequest } from \"../../utils/api\";\nconst initialState = {\n  username: localStorage.getItem(\"username\"),\n  displayName: localStorage.getItem(\"displayName\"),\n  email: localStorage.getItem(\"email\"),\n  token: localStorage.getItem(\"token\"),\n  loading: false\n}; // Note: Signing up requires user to login again.\n\nexport const signUpUser = createAsyncThunk(\"user/signup\", async (request, {\n  rejectWithValue\n}) => {\n  try {\n    const data = await sendRequest(\"accounts/registration/\", \"\", \"post\", request);\n    return data;\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n});\nexport const getUserDetail = createAsyncThunk(\"user/getUserDetail\", async (token, {\n  rejectWithValue\n}) => {\n  try {\n    const userDetail = await sendRequest(\"accounts/user/\", token, \"get\");\n    return userDetail;\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n});\nexport const loginUser = createAsyncThunk(\"user/login\", async (request, {\n  dispatch,\n  getState,\n  rejectWithValue\n}) => {\n  dispatch(resetUser());\n\n  try {\n    const {\n      key\n    } = await sendRequest(\"accounts/login/\", \"\", \"post\", request);\n    const tokenObject = {\n      token: key\n    };\n    const response = await dispatch(getUserDetail(tokenObject.token));\n\n    if (response.type === getUserDetail.rejected.toString()) {\n      return rejectWithValue(response.payload);\n    }\n\n    const userData = getState().user;\n    localStorage.setItem(\"username\", userData.username);\n    localStorage.setItem(\"displayName\", userData.displayName);\n    localStorage.setItem(\"email\", userData.email);\n    localStorage.setItem(\"token\", tokenObject.token);\n    return tokenObject;\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n});\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    resetUser: {\n      reducer: state => {\n        state.username = \"\";\n        state.displayName = \"\";\n        state.email = \"\";\n        state.token = \"\";\n      },\n      prepare: () => {\n        localStorage.clear();\n        return {};\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(signUpUser.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(signUpUser.fulfilled, state => {\n      state.loading = false;\n    });\n    builder.addCase(signUpUser.rejected, state => {\n      state.loading = false;\n    });\n    builder.addCase(loginUser.fulfilled, (state, {\n      payload\n    }) => {\n      state.token = payload.token;\n    });\n    builder.addCase(getUserDetail.fulfilled, (state, {\n      payload\n    }) => {\n      state.username = payload.username;\n      state.displayName = payload.display_name;\n      state.email = payload.email;\n    });\n  }\n});\nexport const {\n  resetUser\n} = userSlice.actions;\nexport const userSelector = state => {\n  const {\n    username,\n    displayName,\n    email,\n    token\n  } = state.user;\n  const authenticated = token === \"null\" ? false : Boolean(token);\n  return {\n    username,\n    displayName,\n    email,\n    token,\n    authenticated\n  };\n};\nexport default userSlice.reducer;","map":{"version":3,"sources":["/home/richwill/workspace/visutrader-frontend/src/redux/slices/user.js"],"names":["createAsyncThunk","createSlice","sendRequest","initialState","username","localStorage","getItem","displayName","email","token","loading","signUpUser","request","rejectWithValue","data","err","response","getUserDetail","userDetail","loginUser","dispatch","getState","resetUser","key","tokenObject","type","rejected","toString","payload","userData","user","setItem","userSlice","name","reducers","reducer","state","prepare","clear","extraReducers","builder","addCase","pending","fulfilled","display_name","actions","userSelector","authenticated","Boolean"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { sendRequest } from \"../../utils/api\";\n\nconst initialState = {\n  username: localStorage.getItem(\"username\"),\n  displayName: localStorage.getItem(\"displayName\"),\n  email: localStorage.getItem(\"email\"),\n  token: localStorage.getItem(\"token\"),\n  loading: false,\n};\n\n// Note: Signing up requires user to login again.\nexport const signUpUser = createAsyncThunk(\n  \"user/signup\",\n  async (request, { rejectWithValue }) => {\n    try {\n      const data = await sendRequest(\n        \"accounts/registration/\",\n        \"\",\n        \"post\",\n        request\n      );\n\n      return data;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  }\n);\n\nexport const getUserDetail = createAsyncThunk(\n  \"user/getUserDetail\",\n  async (token, { rejectWithValue }) => {\n    try {\n      const userDetail = await sendRequest(\"accounts/user/\", token, \"get\");\n\n      return userDetail;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  }\n);\n\nexport const loginUser = createAsyncThunk(\n  \"user/login\",\n  async (request, { dispatch, getState, rejectWithValue }) => {\n    dispatch(resetUser());\n\n    try {\n      const { key } = await sendRequest(\"accounts/login/\", \"\", \"post\", request);\n\n      const tokenObject = {\n        token: key,\n      };\n\n      const response = await dispatch(getUserDetail(tokenObject.token));\n\n      if (response.type === getUserDetail.rejected.toString()) {\n        return rejectWithValue(response.payload);\n      }\n\n      const userData = getState().user;\n\n      localStorage.setItem(\"username\", userData.username);\n      localStorage.setItem(\"displayName\", userData.displayName);\n      localStorage.setItem(\"email\", userData.email);\n      localStorage.setItem(\"token\", tokenObject.token);\n\n      return tokenObject;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  }\n);\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    resetUser: {\n      reducer: (state) => {\n        state.username = \"\";\n        state.displayName = \"\";\n        state.email = \"\";\n        state.token = \"\";\n      },\n      prepare: () => {\n        localStorage.clear();\n        return {};\n      },\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(signUpUser.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(signUpUser.fulfilled, (state) => {\n      state.loading = false;\n    });\n    builder.addCase(signUpUser.rejected, (state) => {\n      state.loading = false;\n    });\n\n    builder.addCase(loginUser.fulfilled, (state, { payload }) => {\n      state.token = payload.token;\n    });\n\n    builder.addCase(getUserDetail.fulfilled, (state, { payload }) => {\n      state.username = payload.username;\n      state.displayName = payload.display_name;\n      state.email = payload.email;\n    });\n  },\n});\n\nexport const { resetUser } = userSlice.actions;\n\nexport const userSelector = (state) => {\n  const { username, displayName, email, token } = state.user;\n  const authenticated = token === \"null\" ? false : Boolean(token);\n  return { username, displayName, email, token, authenticated };\n};\n\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}