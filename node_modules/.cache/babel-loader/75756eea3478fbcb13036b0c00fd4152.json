{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { sendRequest } from \"../../utils/api\";\nconst initialState = {\n  username: localStorage.getItem(\"username\"),\n  displayName: localStorage.getItem(\"displayName\"),\n  email: localStorage.getItem(\"email\"),\n  token: localStorage.getItem(\"token\"),\n  wallet: localStorage.getItem(\"wallet\"),\n  dateJoined: localStorage.getItem(\"dateJoined\"),\n  loading: false\n};\n\nfunction setLocalStorage(data) {\n  for (const [key, value] of Object.entries(data)) {\n    if (value) {\n      localStorage.setItem(key, value);\n    }\n  }\n} // Note: Signing up requires user to login again.\n\n\nexport const signUpUser = createAsyncThunk(\"user/signup\", async (request, {\n  rejectWithValue\n}) => {\n  try {\n    const data = await sendRequest(\"accounts/registration/\", \"\", \"post\", request);\n    return data;\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n});\nexport const getUserDetail = createAsyncThunk(\"user/getUserDetail\", async (token, {\n  rejectWithValue\n}) => {\n  try {\n    const userDetail = await sendRequest(\"accounts/user/\", token, \"get\");\n    return userDetail;\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n});\nexport const loginUser = createAsyncThunk(\"user/login\", async (request, {\n  dispatch,\n  getState,\n  rejectWithValue\n}) => {\n  dispatch(resetUser());\n\n  try {\n    const {\n      key\n    } = await sendRequest(\"accounts/login/\", \"\", \"post\", request);\n    const tokenObject = {\n      token: key\n    };\n    const response = await dispatch(getUserDetail(tokenObject.token));\n\n    if (response.type === getUserDetail.rejected.toString()) {\n      return rejectWithValue(response.payload);\n    }\n\n    const userData = getState().user;\n    setLocalStorage({\n      username: userData.username,\n      displayName: userData.displayName,\n      email: userData.email,\n      wallet: userData.wallet,\n      dateJoined: userData.dateJoined,\n      token: tokenObject.token\n    });\n    return tokenObject;\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n});\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    resetUser: {\n      reducer: state => {\n        state.username = \"\";\n        state.displayName = \"\";\n        state.email = \"\";\n        state.token = \"\";\n      },\n      prepare: () => {\n        localStorage.clear();\n        return {};\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(signUpUser.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(signUpUser.fulfilled, state => {\n      state.loading = false;\n    });\n    builder.addCase(signUpUser.rejected, state => {\n      state.loading = false;\n    });\n    builder.addCase(loginUser.fulfilled, (state, {\n      payload\n    }) => {\n      state.token = payload.token;\n    });\n    builder.addCase(getUserDetail.fulfilled, (state, {\n      payload\n    }) => {\n      state.username = payload.username;\n      state.displayName = payload.display_name;\n      state.email = payload.email;\n      state.wallet = payload.wallets[0];\n      state.dateJoined = payload.created_at;\n    });\n  }\n});\nexport const {\n  resetUser\n} = userSlice.actions;\nexport const userSelector = state => {\n  const {\n    username,\n    displayName,\n    email,\n    dateJoined,\n    token\n  } = state.user;\n  const authenticated = Boolean(token);\n  return {\n    username,\n    displayName,\n    email,\n    dateJoined,\n    token,\n    authenticated\n  };\n};\nexport default userSlice.reducer;","map":{"version":3,"sources":["/home/richwill/workspace/visutrader-frontend/src/redux/slices/user.js"],"names":["createAsyncThunk","createSlice","sendRequest","initialState","username","localStorage","getItem","displayName","email","token","wallet","dateJoined","loading","setLocalStorage","data","key","value","Object","entries","setItem","signUpUser","request","rejectWithValue","err","response","getUserDetail","userDetail","loginUser","dispatch","getState","resetUser","tokenObject","type","rejected","toString","payload","userData","user","userSlice","name","reducers","reducer","state","prepare","clear","extraReducers","builder","addCase","pending","fulfilled","display_name","wallets","created_at","actions","userSelector","authenticated","Boolean"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { sendRequest } from \"../../utils/api\";\n\nconst initialState = {\n  username: localStorage.getItem(\"username\"),\n  displayName: localStorage.getItem(\"displayName\"),\n  email: localStorage.getItem(\"email\"),\n  token: localStorage.getItem(\"token\"),\n  wallet: localStorage.getItem(\"wallet\"),\n  dateJoined: localStorage.getItem(\"dateJoined\"),\n  loading: false,\n};\n\nfunction setLocalStorage(data) {\n  for (const [key, value] of Object.entries(data)) {\n    if (value) {\n      localStorage.setItem(key, value);\n    }\n  }\n}\n\n// Note: Signing up requires user to login again.\nexport const signUpUser = createAsyncThunk(\n  \"user/signup\",\n  async (request, { rejectWithValue }) => {\n    try {\n      const data = await sendRequest(\n        \"accounts/registration/\",\n        \"\",\n        \"post\",\n        request\n      );\n\n      return data;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  }\n);\n\nexport const getUserDetail = createAsyncThunk(\n  \"user/getUserDetail\",\n  async (token, { rejectWithValue }) => {\n    try {\n      const userDetail = await sendRequest(\"accounts/user/\", token, \"get\");\n\n      return userDetail;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  }\n);\n\nexport const loginUser = createAsyncThunk(\n  \"user/login\",\n  async (request, { dispatch, getState, rejectWithValue }) => {\n    dispatch(resetUser());\n\n    try {\n      const { key } = await sendRequest(\"accounts/login/\", \"\", \"post\", request);\n\n      const tokenObject = {\n        token: key,\n      };\n\n      const response = await dispatch(getUserDetail(tokenObject.token));\n\n      if (response.type === getUserDetail.rejected.toString()) {\n        return rejectWithValue(response.payload);\n      }\n\n      const userData = getState().user;\n\n      setLocalStorage({\n        username: userData.username,\n        displayName: userData.displayName,\n        email: userData.email,\n        wallet: userData.wallet,\n        dateJoined: userData.dateJoined,\n        token: tokenObject.token,\n      });\n\n      return tokenObject;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  }\n);\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    resetUser: {\n      reducer: (state) => {\n        state.username = \"\";\n        state.displayName = \"\";\n        state.email = \"\";\n        state.token = \"\";\n      },\n      prepare: () => {\n        localStorage.clear();\n        return {};\n      },\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(signUpUser.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(signUpUser.fulfilled, (state) => {\n      state.loading = false;\n    });\n    builder.addCase(signUpUser.rejected, (state) => {\n      state.loading = false;\n    });\n\n    builder.addCase(loginUser.fulfilled, (state, { payload }) => {\n      state.token = payload.token;\n    });\n\n    builder.addCase(getUserDetail.fulfilled, (state, { payload }) => {\n      state.username = payload.username;\n      state.displayName = payload.display_name;\n      state.email = payload.email;\n      state.wallet = payload.wallets[0];\n      state.dateJoined = payload.created_at;\n    });\n  },\n});\n\nexport const { resetUser } = userSlice.actions;\n\nexport const userSelector = (state) => {\n  const { username, displayName, email, dateJoined, token } = state.user;\n  const authenticated = Boolean(token);\n  return { username, displayName, email, dateJoined, token, authenticated };\n};\n\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}